{"version":3,"sources":["main.ts"],"names":["Transpiler","Transpiler.constructor","Transpiler.transpile","Transpiler.translateProgram","Transpiler.translateFile","Transpiler.createCompilerHost","Transpiler.createCompilerHost.getSourceFile","Transpiler.createCompilerHost.writeFile","Transpiler.getOutputPath","Transpiler.translate","Transpiler.getLibraryName","Transpiler.getRelativeFileName","Transpiler.emit","Transpiler.emitNoSpace","Transpiler.reportError","Transpiler.visit","Output","Output.constructor","Output.emit","Output.emitNoSpace","Output.getResult","Output.addSourceMapping","Output.generateSourceMapComment"],"mappings":"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ACA,CAACA,IAAIA,CAACA,OAAOA,CAACA,QAAQA,CAACA;YAACA,MAAMA,IAAIA,KAAKA,CAACA,WAAWA,CAACA,CAACA;QACxDA,IAAIA,CAACA,MAAMA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA;IAChCA,CAACA;IAEDd,0BAAKA,GAALA,UAAMA,IAAaA;QAAnBe,iBAoBCA;QAnBCA,IAAIA,CAACA,MAAMA,CAACA,gBAAgBA,CAACA,IAAIA,CAACA,CAACA;QACnCA,IAAIA,QAAQA,GAAGA,EAAEA,CAACA,uBAAuBA,CAACA,IAAIA,CAACA,WAAWA,CAACA,IAAIA,EAAEA,IAAIA,CAACA,YAAYA,EAAEA,CAACA,CAACA;QACtFA,EAAEA,CAACA,CAACA,QAAQA,CAACA,CAACA,CAACA;YACbA,QAAQA,CAACA,OAAOA,CAACA,UAACA,CAACA;gBACjBA,EAAEA,CAACA,CAACA,CAACA,CAACA,GAAGA,IAAIA,KAAIA,CAACA,cAAcA,CAACA;oBAACA,MAAMA,CAACA;gBACzCA,KAAIA,CAACA,cAAcA,GAAGA,CAACA,CAACA,GAAGA,CAACA;gBAC5BA,IAAIA,IAAIA,GAAGA,KAAIA,CAACA,WAAWA,CAACA,IAAIA,CAACA,SAASA,CAACA,CAACA,CAACA,GAAGA,EAAEA,CAACA,CAACA,GAAGA,CAACA,CAACA;gBACzDA,KAAIA,CAACA,WAAWA,CAACA,IAAIA,CAACA,CAACA;gBACvBA,KAAIA,CAACA,IAAIA,CAACA,IAAIA,CAACA,CAACA;gBAChBA,EAAEA,CAACA,CAACA,CAACA,CAACA,kBAAkBA,CAACA;oBAACA,KAAIA,CAACA,WAAWA,CAACA,IAAIA,CAACA,CAACA;YACnDA,CAACA,CAACA,CAACA;QACLA,CAACA;QAEDA,GAAGA,CAACA,CAACA,GAAGA,CAACA,CAACA,GAAGA,CAACA,EAAEA,CAACA,GAAGA,IAAIA,CAACA,WAAWA,CAACA,MAAMA,EAAEA,CAACA,EAAEA,EAAEA,CAACA;YACjDA,EAAEA,CAACA,CAACA,IAAIA,CAACA,WAAWA,CAACA,CAACA,CAACA,C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","file":"main.js","sourceRoot":"/Users/vsavkin/projects/ts2dart/","sourcesContent":["/// <reference path='../typings/fs-extra/fs-extra.d.ts' />\n/// <reference path='../typings/node/node.d.ts' />\n/// <reference path='../typings/source-map/source-map.d.ts' />\n// Use HEAD version of typescript, installed by npm\n/// <reference path='../node_modules/typescript/bin/typescript.d.ts' />\nrequire('source-map-support').install();\nimport SourceMap = require('source-map');\nimport fs = require('fs');\nimport fsx = require('fs-extra');\nimport path = require('path');\nimport ts = require('typescript');\n\nimport base = require('./base');\nimport CallTranspiler = require('./call');\nimport DeclarationTranspiler = require('./declaration');\nimport ExpressionTranspiler = require('./expression');\nimport ModuleTranspiler = require('./module');\nimport StatementTranspiler = require('./statement');\nimport TypeTranspiler = require('./type');\nimport LiteralTranspiler = require('./literal');\n\nexport interface TranspilerOptions {\n  // Fail on the first error, do not collect multiple. Allows easier debugging as stack traces lead\n  // directly to the offending line.\n  failFast?: boolean;\n  // Whether to generate 'library a.b.c;' names from relative file paths.\n  generateLibraryName?: boolean;\n  // Whether to generate source maps.\n  generateSourceMap?: boolean;\n  // A base path to relativize absolute file paths against. This is useful for library name\n  // generation (see above) and nicer file names in error messages.\n  basePath?: string;\n}\n\nvar OPTIONS: ts.CompilerOptions = {\n  target: ts.ScriptTarget.ES6,\n  module: ts.ModuleKind.CommonJS,\n  allowNonTsExtensions: true,\n};\n\nexport class Transpiler {\n  private output: Output;\n  private currentFile: ts.SourceFile;\n\n  // Comments attach to all following AST nodes before the next 'physical' token. Track the earliest\n  // offset to avoid printing comments multiple times.\n  private lastCommentIdx: number = -1;\n  private errors: string[] = [];\n\n  private transpilers: base.TranspilerStep[];\n\n  constructor(private options: TranspilerOptions = {}) {\n    this.transpilers = [\n      new CallTranspiler(this),  // Has to come before StatementTranspiler!\n      new DeclarationTranspiler(this),\n      new ExpressionTranspiler(this),\n      new LiteralTranspiler(this),\n      new ModuleTranspiler(this, options.generateLibraryName),\n      new StatementTranspiler(this),\n      new TypeTranspiler(this),\n    ];\n  }\n\n  /**\n   * Transpiles the given files to Dart.\n   * @param fileNames The input files.\n   * @param destination Location to write files to. Creates files next to their sources if absent.\n   */\n  transpile(fileNames: string[], destination?: string): void {\n    var host = this.createCompilerHost(fileNames);\n    if (this.options.basePath && destination === undefined) {\n      throw new Error('Must have a destination path when a basePath is specified ' +\n                      this.options.basePath);\n    }\n    var destinationRoot = destination || this.options.basePath || '';\n    var program = ts.createProgram(fileNames, OPTIONS, host);\n    program.getSourceFiles()\n        // Do not generate output for .d.ts files.\n        .filter((sourceFile: ts.SourceFile) => !sourceFile.fileName.match(/\\.d\\.ts$/))\n        .forEach((f: ts.SourceFile) => {\n          var dartCode = this.translate(f);\n          var outputFile = this.getOutputPath(f.fileName, destinationRoot);\n          fsx.mkdirsSync(path.dirname(outputFile));\n          fs.writeFileSync(outputFile, dartCode);\n        });\n  }\n\n  translateProgram(program: ts.Program): string {\n    var src = program.getSourceFiles()\n                  .filter((sourceFile: ts.SourceFile) => !sourceFile.fileName.match(/\\.d\\.ts$/) &&\n                                                         !!sourceFile.fileName.match(/\\.[jt]s$/))\n                  .map((f) => this.translate(f))\n                  .join('\\n');\n    return src;\n  }\n\n  translateFile(fileName: string): string {\n    var host = this.createCompilerHost([fileName]);\n    var program = ts.createProgram([fileName], OPTIONS, host);\n    return this.translateProgram(program);\n  }\n\n  private createCompilerHost(files: string[]): ts.CompilerHost {\n    var fileMap: {[s: string]: boolean} = {};\n    files.forEach((f) => fileMap[f] = true);\n    return {\n      getSourceFile(sourceName, languageVersion) {\n        // Only transpile the files directly passed in, do not transpile transitive dependencies.\n        if (fileMap.hasOwnProperty(sourceName)) {\n          var contents = fs.readFileSync(sourceName, 'UTF-8');\n          return ts.createSourceFile(sourceName, contents, OPTIONS.target, true);\n        }\n        if (sourceName === 'lib.d.ts') {\n          return ts.createSourceFile(sourceName, '', OPTIONS.target, true);\n        }\n        return undefined;\n      },\n      writeFile(name, text, writeByteOrderMark) { fs.writeFile(name, text); },\n      getDefaultLibFileName: () => 'lib.d.ts',\n      useCaseSensitiveFileNames: () => true,\n      getCanonicalFileName: (filename) => filename,\n      getCurrentDirectory: () => '',\n      getNewLine: () => '\\n'\n    };\n  }\n\n  // Visible for testing.\n  getOutputPath(filePath: string, destinationRoot: string): string {\n    var relative = this.getRelativeFileName(filePath);\n    var dartFile = relative.replace(/.(js|es6|ts)$/, '.dart');\n    return path.join(destinationRoot, dartFile);\n  }\n\n  private translate(sourceFile: ts.SourceFile): string {\n    this.currentFile = sourceFile;\n    this.output =\n        new Output(sourceFile, this.getRelativeFileName(), this.options.generateSourceMap);\n    this.errors = [];\n    this.lastCommentIdx = -1;\n    this.visit(sourceFile);\n    if (this.errors.length) {\n      var e = new Error(this.errors.join('\\n'));\n      e.name = 'TS2DartError';\n      throw e;\n    }\n\n    return this.output.getResult();\n  }\n\n  // For the Dart keyword list see\n  // https://www.dartlang.org/docs/dart-up-and-running/ch02.html#keywords\n  private static DART_RESERVED_WORDS =\n      ('assert break case catch class const continue default do else enum extends false final ' +\n       'finally for if in is new null rethrow return super switch this throw true try var void ' +\n       'while with')\n          .split(/ /);\n\n  // These are the built-in and limited keywords.\n  private static DART_OTHER_KEYWORDS =\n      ('abstract as async await deferred dynamic export external factory get implements import ' +\n       'library operator part set static sync typedef yield')\n          .split(/ /);\n\n  getLibraryName(nameForTest?: string) {\n    var fileName = this.getRelativeFileName(nameForTest);\n    var parts = fileName.split('/');\n    return parts.filter((p) => p.length > 0)\n        .map((p) => p.replace(/[^\\w.]/g, '_'))\n        .map((p) => p.replace(/\\.[jt]s$/g, ''))\n        .map((p) => Transpiler.DART_RESERVED_WORDS.indexOf(p) != -1 ? '_' + p : p)\n        .join('.');\n  }\n\n  private getRelativeFileName(absolute?: string) {\n    var filePath = absolute !== undefined ? absolute : this.currentFile.fileName;\n    if (filePath.indexOf('/') !== 0) return filePath;  // relative path.\n    var base = this.options.basePath || '';\n    if (filePath.indexOf(base) !== 0) {\n      throw new Error(`Files must be located under base, got ${filePath} vs ${base}`);\n    }\n    return path.relative(this.options.basePath || '', filePath);\n  }\n\n  emit(s: string) { this.output.emit(s); }\n  emitNoSpace(s: string) { this.output.emitNoSpace(s); }\n\n  reportError(n: ts.Node, message: string) {\n    var file = n.getSourceFile() || this.currentFile;\n    var fileName = this.getRelativeFileName(file.fileName);\n    var start = n.getStart(file);\n    var pos = file.getLineAndCharacterOfPosition(start);\n    // Line and character are 0-based.\n    var fullMessage = `${fileName}:${pos.line + 1}:${pos.character + 1}: ${message}`;\n    if (this.options.failFast) throw new Error(fullMessage);\n    this.errors.push(fullMessage);\n  }\n\n  visit(node: ts.Node) {\n    this.output.addSourceMapping(node);\n    var comments = ts.getLeadingCommentRanges(this.currentFile.text, node.getFullStart());\n    if (comments) {\n      comments.forEach((c) => {\n        if (c.pos <= this.lastCommentIdx) return;\n        this.lastCommentIdx = c.pos;\n        var text = this.currentFile.text.substring(c.pos, c.end);\n        this.emitNoSpace('\\n');\n        this.emit(text);\n        if (c.hasTrailingNewLine) this.emitNoSpace('\\n');\n      });\n    }\n\n    for (var i = 0; i < this.transpilers.length; i++) {\n      if (this.transpilers[i].visitNode(node)) return;\n    }\n\n    this.reportError(node, 'Unsupported node type ' + (<any>ts).SyntaxKind[node.kind] + ': ' +\n                               node.getFullText());\n  }\n}\n\nclass Output {\n  private result: string = '';\n  private column: number = 1;\n  private line: number = 1;\n\n  // Position information.\n  private generateSourceMap: boolean;\n  private sourceMap: SourceMap.SourceMapGenerator;\n\n  constructor(private currentFile: ts.SourceFile, private relativeFileName: string,\n              generateSourceMap: boolean) {\n    if (generateSourceMap) {\n      this.sourceMap = new SourceMap.SourceMapGenerator({file: relativeFileName + '.dart'});\n      this.sourceMap.setSourceContent(relativeFileName, this.currentFile.text);\n    }\n  }\n\n  emit(str: string) {\n    this.emitNoSpace(' ');\n    this.emitNoSpace(str);\n  }\n\n  emitNoSpace(str: string) {\n    this.result += str;\n    for (var i = 0; i < str.length; i++) {\n      if (str[i] === '\\n') {\n        this.line++;\n        this.column = 0;\n      } else {\n        this.column++;\n      }\n    }\n  }\n\n  getResult(): string { return this.result + this.generateSourceMapComment(); }\n\n  addSourceMapping(n: ts.Node) {\n    if (!this.sourceMap) return;  // source maps disabled.\n    var file = n.getSourceFile() || this.currentFile;\n    var start = n.getStart(file);\n    var pos = file.getLineAndCharacterOfPosition(start);\n\n    var mapping: SourceMap.Mapping = {\n      original: {line: pos.line + 1, column: pos.character},\n      generated: {line: this.line, column: this.column},\n      source: this.relativeFileName,\n    };\n\n    this.sourceMap.addMapping(mapping);\n  }\n\n  private generateSourceMapComment() {\n    if (!this.sourceMap) return '';\n    var base64map = new Buffer(JSON.stringify(this.sourceMap)).toString('base64');\n    return '\\n\\n//# sourceMappingURL=data:application/json;base64,' + base64map;\n  }\n}\n\n// CLI entry point\nif (require.main === module) {\n  new Transpiler().transpile(process.argv.slice(2))\n}\n"]}