/// <reference path="../typings/fs-extra/fs-extra.d.ts" />
/// <reference path="../typings/node/node.d.ts" />
/// <reference path="../typings/source-map/source-map.d.ts" />
/// <reference path="../node_modules/typescript/bin/typescript.d.ts" />
import ts = require('typescript');
export interface TranspilerOptions {
    failFast?: boolean;
    generateLibraryName?: boolean;
    generateSourceMap?: boolean;
    basePath?: string;
}
export declare class Transpiler {
    private options;
    private output;
    private currentFile;
    private lastCommentIdx;
    private errors;
    private transpilers;
    constructor(options?: TranspilerOptions);
    /**
     * Transpiles the given files to Dart.
     * @param fileNames The input files.
     * @param destination Location to write files to. Creates files next to their sources if absent.
     */
    transpile(fileNames: string[], destination?: string): void;
    translateProgram(program: ts.Program): string;
    translateFile(fileName: string): string;
    private createCompilerHost(files);
    getOutputPath(filePath: string, destinationRoot: string): string;
    private translate(sourceFile);
    private static DART_RESERVED_WORDS;
    private static DART_OTHER_KEYWORDS;
    getLibraryName(nameForTest?: string): string;
    private getRelativeFileName(absolute?);
    emit(s: string): void;
    emitNoSpace(s: string): void;
    reportError(n: ts.Node, message: string): void;
    visit(node: ts.Node): void;
}
