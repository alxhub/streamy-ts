{
  "name": "gulp-clang-format",
  "version": "1.0.12",
  "description": "Checks that code is properly formatted",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/angular/gulp-clang-format.git"
  },
  "main": "index.js",
  "author": {
    "name": "Alex Eagle",
    "email": "alexeagle@google.com"
  },
  "license": "Apache 2",
  "devDependencies": {
    "gulp": "^3.8.11"
  },
  "dependencies": {
    "gulp-util": "^3.0.4",
    "stream-equal": "^0.1.5",
    "through2": "^0.6.3",
    "clang-format": "^1.0.12"
  },
  "readme": "# gulp-clang-format\nGulp plugin to check that code is properly formatted, according to clang-format.\n\nIf the code differs from how clang-format would format it, this prints a warning\nto the build output, as well as a command to run that formats the file in-place.\n\n## Usage\n\nSample gulpfile.js:\n\n```js\nvar format = require('gulp-clang-format');\ngulp.task('check-format', function() {\n  return gulp.src('*.js')\n\t.pipe(format.checkFormat());\n});\n```\n\n### Promoting warnings to errors\nIf you want to enforce the formatting, so that other team members don't introduce\ncode that gives you a warning, you can turn them into build errors by acting on\nthe 'warning' event. For example, this task exits the build immediately:\n```js\nvar format = require('gulp-clang-format');\ngulp.task('check-format', function() {\n  return gulp.src('*.js')\n\t.pipe(format.checkFormat('file'))\n    .on('warning', function(e) { process.stdout.write(e.message); process.exit(1) });\n;\n});\n```\n\n## Options\nThe checkFormat() function accepts an optional parameter indicating the\nstyle to use. By default, it applies the \"Google\" style.\n\nThe parameter is passed to the -style argument of clang-format. See the\ndocs here: http://clang.llvm.org/docs/ClangFormatStyleOptions.html\n\nThe recommended value is the string 'file', this means that clang-format will\nlook for a .clang-format file in your repository. This allows you to keep\nthe formatting consistent with other developers.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/angular/gulp-clang-format/issues"
  },
  "homepage": "https://github.com/angular/gulp-clang-format#readme",
  "_id": "gulp-clang-format@1.0.12",
  "_shasum": "14edafe3c0f5388a50ecc5e6f7c4e0aa21ed951b",
  "_resolved": "https://registry.npmjs.org/gulp-clang-format/-/gulp-clang-format-1.0.12.tgz",
  "_from": "https://registry.npmjs.org/gulp-clang-format/-/gulp-clang-format-1.0.12.tgz"
}
