{
  "name": "dart2jsaas",
  "version": "0.0.16",
  "main": "lib/index.js",
  "dependencies": {
    "mkdirp": "~0.3.5",
    "q": "~0.9.7",
    "q-io": "~1.10.8"
  },
  "description": "dart2jsass ==========",
  "scripts": {
    "test": "jasmine-node spec/"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jbdeboer/dart2jsaas.git"
  },
  "keywords": [
    "dart2js",
    "dart"
  ],
  "author": {
    "name": "James deBoer",
    "email": "james@huronbox.com"
  },
  "contributors": [
    {
      "name": "Jeff Cross",
      "email": "middlefloor@gmail.com"
    }
  ],
  "license": "MIT",
  "readme": "dart2jsaas\n==========\n\nDart2JS-as-a-service is a node.js module which compiles Dart applications to Javascript without any additional configuration.\n\nIt is designed to seamlessly port Dartium-centric workflows to production (JS-only) browsers.\n\nHow It Works\n------------\n\nWhen dart2jsaas is given the URL of a Dart application, it will crawl all\nof the application's dependencies.  The service then feeds the entire set of Dart files to dart2js and returns the generated\nJavascript.\n\nSince it fetches data directly from the server, it does not depend on the the filesystem, pub or pubspec.lock.\nAs long as the app loads correctly in Dartium, dart2jsaas\nwill be able to compile the app into Javascript.\n\nDon't Repeat Yourself. One Configuration\n-----------------\n\ndart2jsaas allow you to use the same deployment configuration for both Dartium and dart2js.  Since dart2jsaas does\nnot depend on the filesystem, it works with on-the-fly generated Dart code and configurations where code is\nserved from multiple locations.\n\nUsage\n-----\n\nThe basic use-case is to listen for ```main.dart.js``` HTTP requests, compile ```main.dart``` and return the response.\nThis setup works well with dart.js' fallback scheme where if it can't find a Dart VM, it simply requests\n```x.dart.js``` in place of the ```x.dart``` script tag.\n\nMiddleware for connect / express is included.\n\nSimple, command-line integration is also possible.  See cmdline.js.\n\nTo see dart2jsaas in action, check out karma and the karma-dart project.\n\nTesting\n-------\n\nWe are using jasmine-node.\n\nnpm install jasmine-node -g\njasmine-node spec/\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jbdeboer/dart2jsaas/issues"
  },
  "homepage": "https://github.com/jbdeboer/dart2jsaas#readme",
  "_id": "dart2jsaas@0.0.16",
  "_shasum": "98584f42ffe62daff338eb52792a6a5ed49cc8fa",
  "_resolved": "https://registry.npmjs.org/dart2jsaas/-/dart2jsaas-0.0.16.tgz",
  "_from": "https://registry.npmjs.org/dart2jsaas/-/dart2jsaas-0.0.16.tgz"
}
